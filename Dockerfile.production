# Multi-stage production Dockerfile for Podcastfy
# Stage 1: Build dependencies
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements
COPY requirements.txt /tmp/
COPY requirements.production.txt /tmp/

# Install Python dependencies
RUN pip install --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r /tmp/requirements.txt && \
    pip install --no-cache-dir -r /tmp/requirements.production.txt

# Stage 2: Runtime image
FROM python:3.11-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r podcastfy && \
    useradd -r -g podcastfy -d /app -s /sbin/nologin podcastfy

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv

# Set environment variables
ENV PATH="/opt/venv/bin:$PATH" \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app \
    APP_HOME=/app

# Create app directory
WORKDIR $APP_HOME

# Copy application code
COPY --chown=podcastfy:podcastfy . .

# Create necessary directories
RUN mkdir -p /app/logs /app/temp && \
    chown -R podcastfy:podcastfy /app

# Switch to non-root user
USER podcastfy

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD python -c "import podcastfy; print('OK')" || exit 1

# Default command (can be overridden)
CMD ["python", "-m", "podcastfy.api.app"] 